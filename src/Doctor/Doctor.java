/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Doctor;

import java.awt.*;
import javax.swing.*;
import javax.swing.border.*;
import Login.Login;
import Pharmacy.Pharmacy;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Duc Hoa
 */
public class Doctor extends javax.swing.JFrame {

    private JFrame frame;
    /**
     * Creates new form Doctor
     */
    public Doctor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - le duc hoa
    private void initComponents() {
        DoctorRefNo = new Label();
        Reference = new JTextField();
        label8 = new Label();
        label2 = new Label();
        NumofTablet = new JTextField();
        Dose = new JTextField();
        label11 = new Label();
        IssuedDate = new JTextField();
        Lot = new JTextField();
        DailyDose = new JTextField();
        ExpDate = new JTextField();
        label7 = new Label();
        label14 = new Label();
        label15 = new Label();
        label16 = new Label();
        label18 = new Label();
        FurtherInfor = new JTextField();
        label23 = new Label();
        PossibleSide = new JTextField();
        label24 = new Label();
        Admin = new JTextField();
        label25 = new Label();
        StoreAdvise = new JTextField();
        label30 = new Label();
        HowtoUse = new JTextField();
        label31 = new Label();
        DrivingUsingMachine = new JTextField();
        label32 = new Label();
        DoctorNo = new JTextField();
        label33 = new Label();
        PatientID = new JTextField();
        jScrollPane1 = new JScrollPane();
        jTable1 = new JTable();
        jPanel1 = new JPanel();
        Exit = new JButton();
        Delete = new JButton();
        Update = new JButton();
        Doctor = new JButton();
        jButton5 = new JButton();
        Pharmacy = new JButton();
        Login = new JButton();
        Reference1 = new JTextField();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        var contentPane = getContentPane();
        contentPane.setLayout(null);

        //---- DoctorRefNo ----
        DoctorRefNo.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        DoctorRefNo.setFont(new Font("Times New Roman", Font.BOLD, 18));
        DoctorRefNo.setText("Doctor's Ref No");
        contentPane.add(DoctorRefNo);
        DoctorRefNo.setBounds(50, 30, 140, 60);

        //---- Reference ----
        Reference.setFont(new Font("Times New Roman", Font.BOLD, 18));
        Reference.addActionListener(e -> ReferenceActionPerformed(e));
        contentPane.add(Reference);
        Reference.setBounds(270, 40, 230, 40);

        //---- label8 ----
        label8.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        label8.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label8.setText("Reference No:");
        contentPane.add(label8);
        label8.setBounds(50, 90, 130, 80);

        //---- label2 ----
        label2.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        label2.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label2.setText("Number of tablets:");
        contentPane.add(label2);
        label2.setBounds(50, 220, 170, 100);

        //---- NumofTablet ----
        NumofTablet.setFont(new Font("Times New Roman", Font.BOLD, 18));
        NumofTablet.addActionListener(e -> NumofTabletActionPerformed(e));
        contentPane.add(NumofTablet);
        NumofTablet.setBounds(270, 250, 230, 40);

        //---- Dose ----
        Dose.setFont(new Font("Times New Roman", Font.BOLD, 18));
        Dose.addActionListener(e -> DoseActionPerformed(e));
        contentPane.add(Dose);
        Dose.setBounds(270, 180, 230, 40);

        //---- label11 ----
        label11.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        label11.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label11.setText("Dose:");
        contentPane.add(label11);
        label11.setBounds(50, 150, 140, 100);

        //---- IssuedDate ----
        IssuedDate.setFont(new Font("Times New Roman", Font.BOLD, 18));
        IssuedDate.addActionListener(e -> IssuedDateActionPerformed(e));
        contentPane.add(IssuedDate);
        IssuedDate.setBounds(270, 400, 230, 40);

        //---- Lot ----
        Lot.setFont(new Font("Times New Roman", Font.BOLD, 18));
        Lot.addActionListener(e -> LotActionPerformed(e));
        contentPane.add(Lot);
        Lot.setBounds(270, 320, 230, 40);

        //---- DailyDose ----
        DailyDose.setFont(new Font("Times New Roman", Font.BOLD, 18));
        DailyDose.addActionListener(e -> DailyDoseActionPerformed(e));
        contentPane.add(DailyDose);
        DailyDose.setBounds(270, 550, 230, 40);

        //---- ExpDate ----
        ExpDate.setFont(new Font("Times New Roman", Font.BOLD, 18));
        ExpDate.addActionListener(e -> ExpDateActionPerformed(e));
        contentPane.add(ExpDate);
        ExpDate.setBounds(270, 480, 230, 40);

        //---- label7 ----
        label7.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        label7.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label7.setText("Issued Date:");
        contentPane.add(label7);
        label7.setBounds(50, 380, 140, 100);

        //---- label14 ----
        label14.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        label14.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label14.setText("Lot:");
        contentPane.add(label14);
        label14.setBounds(50, 310, 60, 100);

        //---- label15 ----
        label15.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        label15.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label15.setText("Daily Dose:");
        contentPane.add(label15);
        label15.setBounds(50, 530, 110, 90);

        //---- label16 ----
        label16.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        label16.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label16.setText("Exp Date:");
        contentPane.add(label16);
        label16.setBounds(50, 460, 100, 100);

        //---- label18 ----
        label18.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label18.setText("Further Information:");
        contentPane.add(label18);
        label18.setBounds(700, 80, 170, 100);

        //---- FurtherInfor ----
        FurtherInfor.setFont(new Font("Times New Roman", Font.BOLD, 24));
        FurtherInfor.addActionListener(e -> FurtherInforActionPerformed(e));
        contentPane.add(FurtherInfor);
        FurtherInfor.setBounds(970, 110, 220, 40);

        //---- label23 ----
        label23.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label23.setText("Possible Side Effects:");
        contentPane.add(label23);
        label23.setBounds(700, 10, 170, 100);

        //---- PossibleSide ----
        PossibleSide.setFont(new Font("Times New Roman", Font.BOLD, 24));
        PossibleSide.addActionListener(e -> PossibleSideActionPerformed(e));
        contentPane.add(PossibleSide);
        PossibleSide.setBounds(970, 40, 220, 40);

        //---- label24 ----
        label24.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label24.setText("Adminstration:");
        contentPane.add(label24);
        label24.setBounds(700, 230, 170, 100);

        //---- Admin ----
        Admin.setFont(new Font("Times New Roman", Font.BOLD, 24));
        Admin.addActionListener(e -> AdminActionPerformed(e));
        contentPane.add(Admin);
        Admin.setBounds(970, 260, 220, 40);

        //---- label25 ----
        label25.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label25.setText("Stogare Advise:");
        contentPane.add(label25);
        label25.setBounds(700, 160, 170, 100);

        //---- StoreAdvise ----
        StoreAdvise.setFont(new Font("Times New Roman", Font.BOLD, 24));
        StoreAdvise.addActionListener(e -> StoreAdviseActionPerformed(e));
        contentPane.add(StoreAdvise);
        StoreAdvise.setBounds(970, 190, 220, 40);

        //---- label30 ----
        label30.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label30.setText("How to Use Medication:");
        contentPane.add(label30);
        label30.setBounds(700, 380, 170, 100);

        //---- HowtoUse ----
        HowtoUse.setFont(new Font("Times New Roman", Font.BOLD, 24));
        HowtoUse.addActionListener(e -> HowtoUseActionPerformed(e));
        contentPane.add(HowtoUse);
        HowtoUse.setBounds(970, 410, 220, 40);

        //---- label31 ----
        label31.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label31.setText("Driving Using Machines:");
        contentPane.add(label31);
        label31.setBounds(700, 310, 170, 100);

        //---- DrivingUsingMachine ----
        DrivingUsingMachine.setFont(new Font("Times New Roman", Font.BOLD, 24));
        DrivingUsingMachine.addActionListener(e -> DrivingUsingMachineActionPerformed(e));
        contentPane.add(DrivingUsingMachine);
        DrivingUsingMachine.setBounds(970, 340, 220, 40);

        //---- label32 ----
        label32.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label32.setText("Doctors NHS No:");
        contentPane.add(label32);
        label32.setBounds(700, 530, 170, 100);

        //---- DoctorNo ----
        DoctorNo.setFont(new Font("Times New Roman", Font.BOLD, 24));
        DoctorNo.addActionListener(e -> DoctorNoActionPerformed(e));
        contentPane.add(DoctorNo);
        DoctorNo.setBounds(970, 560, 220, 40);

        //---- label33 ----
        label33.setFont(new Font("Times New Roman", Font.BOLD, 18));
        label33.setText("Patient ID:");
        contentPane.add(label33);
        label33.setBounds(700, 460, 170, 100);

        //---- PatientID ----
        PatientID.setFont(new Font("Times New Roman", Font.BOLD, 24));
        PatientID.addActionListener(e -> PatientIDActionPerformed(e));
        contentPane.add(PatientID);
        PatientID.setBounds(970, 490, 220, 40);

        //======== jScrollPane1 ========
        {

            //---- jTable1 ----
            jTable1.setModel(new DefaultTableModel(
                new Object[][] {
                },
                new String[] {
                    "Name of Tablets", "Reference No", "Lot", "Issued Date", "Exp Date", "Daily Dose", "Further Infor", "Store Advise", "Admin", "Driving Using Machine", "How to Use", "Patient ID", "Doctor No", "Possoble Side"
                }
            ));
            jScrollPane1.setViewportView(jTable1);
        }
        contentPane.add(jScrollPane1);
        jScrollPane1.setBounds(20, 740, 1170, 300);

        //======== jPanel1 ========
        {
            jPanel1.setBorder(new LineBorder(Color.black, 3));
            jPanel1.setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.TitledBorder(new javax.swing.border
            .EmptyBorder(0,0,0,0), "JF\u006frmDes\u0069gner \u0045valua\u0074ion",javax.swing.border.TitledBorder.CENTER,javax
            .swing.border.TitledBorder.BOTTOM,new java.awt.Font("D\u0069alog",java.awt.Font.BOLD,
            12),java.awt.Color.red),jPanel1. getBorder()));jPanel1. addPropertyChangeListener(new java.beans
            .PropertyChangeListener(){@Override public void propertyChange(java.beans.PropertyChangeEvent e){if("\u0062order".equals(e.
            getPropertyName()))throw new RuntimeException();}});
            jPanel1.setLayout(null);

            //---- Exit ----
            Exit.setText("Exit");
            Exit.addActionListener(e -> ExitActionPerformed(e));
            jPanel1.add(Exit);
            Exit.setBounds(1050, 30, 110, 30);

            //---- Delete ----
            Delete.setText("Delete");
            Delete.addActionListener(e -> DeleteActionPerformed(e));
            jPanel1.add(Delete);
            Delete.setBounds(40, 30, 110, 30);

            //---- Update ----
            Update.setText("Update");
            Update.addActionListener(e -> UpdateActionPerformed(e));
            jPanel1.add(Update);
            Update.setBounds(200, 30, 110, 30);

            //---- Doctor ----
            Doctor.setText("Doctor");
            Doctor.addActionListener(e -> DoctorActionPerformed(e));
            jPanel1.add(Doctor);
            Doctor.setBounds(360, 30, 110, 30);

            //---- jButton5 ----
            jButton5.setText("GP Appointment");
            jButton5.addActionListener(e -> jButton5ActionPerformed(e));
            jPanel1.add(jButton5);
            jButton5.setBounds(530, 30, 110, 30);

            //---- Pharmacy ----
            Pharmacy.setText("Pharmacy");
            Pharmacy.addActionListener(e -> PharmacyActionPerformed(e));
            jPanel1.add(Pharmacy);
            Pharmacy.setBounds(700, 30, 110, 30);

            //---- Login ----
            Login.setText("Login");
            Login.addActionListener(e -> LoginActionPerformed(e));
            jPanel1.add(Login);
            Login.setBounds(880, 30, 110, 30);

            {
                // compute preferred size
                Dimension preferredSize = new Dimension();
                for(int i = 0; i < jPanel1.getComponentCount(); i++) {
                    Rectangle bounds = jPanel1.getComponent(i).getBounds();
                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
                }
                Insets insets = jPanel1.getInsets();
                preferredSize.width += insets.right;
                preferredSize.height += insets.bottom;
                jPanel1.setMinimumSize(preferredSize);
                jPanel1.setPreferredSize(preferredSize);
            }
        }
        contentPane.add(jPanel1);
        jPanel1.setBounds(20, 630, 1170, 90);

        //---- Reference1 ----
        Reference1.setFont(new Font("Times New Roman", Font.BOLD, 18));
        Reference1.addActionListener(e -> Reference1ActionPerformed(e));
        contentPane.add(Reference1);
        Reference1.setBounds(270, 100, 230, 40);

        {
            // compute preferred size
            Dimension preferredSize = new Dimension();
            for(int i = 0; i < contentPane.getComponentCount(); i++) {
                Rectangle bounds = contentPane.getComponent(i).getBounds();
                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
            }
            Insets insets = contentPane.getInsets();
            preferredSize.width += insets.right;
            preferredSize.height += insets.bottom;
            contentPane.setMinimumSize(preferredSize);
            contentPane.setPreferredSize(preferredSize);
        }
        pack();
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

    private void ReferenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReferenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ReferenceActionPerformed

    private void NumofTabletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumofTabletActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumofTabletActionPerformed

    private void DoseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DoseActionPerformed

    private void IssuedDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssuedDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IssuedDateActionPerformed

    private void LotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LotActionPerformed

    private void DailyDoseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DailyDoseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DailyDoseActionPerformed

    private void ExpDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExpDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExpDateActionPerformed

    private void FurtherInforActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FurtherInforActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FurtherInforActionPerformed

    private void PossibleSideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PossibleSideActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PossibleSideActionPerformed

    private void AdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AdminActionPerformed

    private void StoreAdviseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoreAdviseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StoreAdviseActionPerformed

    private void HowtoUseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HowtoUseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HowtoUseActionPerformed

    private void DrivingUsingMachineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DrivingUsingMachineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DrivingUsingMachineActionPerformed

    private void DoctorNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoctorNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DoctorNoActionPerformed

    private void PatientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientIDActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        frame = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(frame, "Do you want to exit?", "Medical store billing", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_ExitActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        if(jTable1.getSelectedRow() == -1){
            if(jTable1.getRowCount() == 0){
                JOptionPane.showMessageDialog(null, "No data to delete!!!");
            }
            else{
                JOptionPane.showMessageDialog(null, "Select a row to delete", "Medical store billing", JOptionPane.OK_OPTION);
            }
        }
        else{
            model.removeRow(jTable1.getSelectedRow());
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        //if((NameTablets.getSelectedItem()).equals("Ibuprofen")){
            model.addRow(new Object[]{DoctorRefNo.getText(), DoctorRefNo.getText(), NumofTablet.getText(),
                Lot.getText(), PossibleSide.getText(), FurtherInfor.getText(), StoreAdvise.getText(), IssuedDate.getText(),
                ExpDate.getText(), DailyDose.getText(), Admin.getText(), DrivingUsingMachine.getText(), HowtoUse.getText(),
                PatientID.getText(), DoctorNo.getText()});

        //}

    }//GEN-LAST:event_UpdateActionPerformed

    private void DoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DoctorActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void PharmacyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PharmacyActionPerformed
        Pharmacy iPharmacy = new Pharmacy();
        iPharmacy.setVisible(true);
    }//GEN-LAST:event_PharmacyActionPerformed

    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginActionPerformed
        Login myLogin = new Login();
        myLogin.setVisible(true);
    }//GEN-LAST:event_LoginActionPerformed

    private void Reference1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reference1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Reference1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Doctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - le duc hoa
    private Label DoctorRefNo;
    private JTextField Reference;
    private Label label8;
    private Label label2;
    private JTextField NumofTablet;
    private JTextField Dose;
    private Label label11;
    private JTextField IssuedDate;
    private JTextField Lot;
    private JTextField DailyDose;
    private JTextField ExpDate;
    private Label label7;
    private Label label14;
    private Label label15;
    private Label label16;
    private Label label18;
    private JTextField FurtherInfor;
    private Label label23;
    private JTextField PossibleSide;
    private Label label24;
    private JTextField Admin;
    private Label label25;
    private JTextField StoreAdvise;
    private Label label30;
    private JTextField HowtoUse;
    private Label label31;
    private JTextField DrivingUsingMachine;
    private Label label32;
    private JTextField DoctorNo;
    private Label label33;
    private JTextField PatientID;
    private JScrollPane jScrollPane1;
    private JTable jTable1;
    private JPanel jPanel1;
    private JButton Exit;
    private JButton Delete;
    private JButton Update;
    private JButton Doctor;
    private JButton jButton5;
    private JButton Pharmacy;
    private JButton Login;
    private JTextField Reference1;
    // End of variables declaration//GEN-END:variables
}
